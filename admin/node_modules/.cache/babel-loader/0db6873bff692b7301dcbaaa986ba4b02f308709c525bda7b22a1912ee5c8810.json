{"ast":null,"code":"import { PERSIST_STORE_NAME } from \"constants/app.constant\";\nimport rootReducer from \"./rootReducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst middlewares = [];\nconst persistConfig = {\n  key: PERSIST_STORE_NAME,\n  keyPrefix: \"\",\n  storage,\n  whitelist: [\"auth\", \"theme\"]\n};\nconst store = configureStore({\n  reducer: persistReducer(persistConfig, rootReducer()),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  }).concat(middlewares),\n  devTools: process.env.NODE_ENV === \"development\"\n});\nstore.asyncReducers = {};\nexport const persistor = persistStore(store);\nexport const injectReducer = (key, reducer) => {\n  if (store.asyncReducers[key]) {\n    return false;\n  }\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(persistReducer(persistConfig, rootReducer(store.asyncReducers)));\n  persistor.persist();\n  return store;\n};\nexport default store;","map":{"version":3,"names":["PERSIST_STORE_NAME","rootReducer","configureStore","persistStore","persistReducer","storage","middlewares","persistConfig","key","keyPrefix","whitelist","store","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","concat","devTools","process","env","NODE_ENV","asyncReducers","persistor","injectReducer","replaceReducer","persist"],"sources":["C:/Projects/task-app/admin/src/store/index.js"],"sourcesContent":["import { PERSIST_STORE_NAME } from \"constants/app.constant\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middlewares = [];\r\n\r\nconst persistConfig = {\r\n  key: PERSIST_STORE_NAME,\r\n  keyPrefix: \"\",\r\n  storage,\r\n  whitelist: [\"auth\", \"theme\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducer()),\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n    }).concat(middlewares),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nstore.asyncReducers = {};\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport const injectReducer = (key, reducer) => {\r\n  if (store.asyncReducers[key]) {\r\n    return false;\r\n  }\r\n  store.asyncReducers[key] = reducer;\r\n  store.replaceReducer(\r\n    persistReducer(persistConfig, rootReducer(store.asyncReducers))\r\n  );\r\n  persistor.persist();\r\n  return store;\r\n};\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAER,kBAAkB;EACvBS,SAAS,EAAE,EAAE;EACbJ,OAAO;EACPK,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO;AAC7B,CAAC;AAED,MAAMC,KAAK,GAAGT,cAAc,CAAC;EAC3BU,OAAO,EAAER,cAAc,CAACG,aAAa,EAAEN,WAAW,CAAC,CAAC,CAAC;EACrDY,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE;EACrB,CAAC,CAAC,CAACC,MAAM,CAACX,WAAW,CAAC;EACxBY,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEFV,KAAK,CAACW,aAAa,GAAG,CAAC,CAAC;AAExB,OAAO,MAAMC,SAAS,GAAGpB,YAAY,CAACQ,KAAK,CAAC;AAE5C,OAAO,MAAMa,aAAa,GAAGA,CAAChB,GAAG,EAAEI,OAAO,KAAK;EAC7C,IAAID,KAAK,CAACW,aAAa,CAACd,GAAG,CAAC,EAAE;IAC5B,OAAO,KAAK;EACd;EACAG,KAAK,CAACW,aAAa,CAACd,GAAG,CAAC,GAAGI,OAAO;EAClCD,KAAK,CAACc,cAAc,CAClBrB,cAAc,CAACG,aAAa,EAAEN,WAAW,CAACU,KAAK,CAACW,aAAa,CAAC,CAChE,CAAC;EACDC,SAAS,CAACG,OAAO,CAAC,CAAC;EACnB,OAAOf,KAAK;AACd,CAAC;AAED,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}