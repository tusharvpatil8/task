{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Dropdown\\\\DropdownToggle.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { HiChevronDown, HiChevronUp, HiChevronRight, HiChevronLeft } from 'react-icons/hi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropdownToggleDefaultContent = ({\n  placement,\n  children\n}) => {\n  // TODO: impl rtl handling\n  if (placement && placement.includes('middle-start')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [children, /*#__PURE__*/_jsxDEV(HiChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n  if (placement && placement.includes('middle-end')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HiChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), children]\n    }, void 0, true);\n  }\n  if (placement && placement.includes('top')) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [children, /*#__PURE__*/_jsxDEV(HiChevronUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, /*#__PURE__*/_jsxDEV(HiChevronDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c = DropdownToggleDefaultContent;\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => {\n  const {\n    className,\n    renderTitle,\n    children,\n    placement,\n    inSidenav,\n    disabled,\n    toggleClassName,\n    ...rest\n  } = props;\n  const toggleClass = 'dropdown-toggle';\n  const disabledClass = 'dropdown-toggle-disabled';\n  const dropdownToggleClass = classNames(toggleClass, className, toggleClassName, disabled && disabledClass);\n  const dropdownToggleDefaultClass = classNames(dropdownToggleClass, 'dropdown-toggle-default');\n  if (renderTitle) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dropdownToggleClass,\n      ...rest,\n      ref: ref,\n      children: renderTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: dropdownToggleDefaultClass,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center\",\n      children: /*#__PURE__*/_jsxDEV(DropdownToggleDefaultContent, {\n        placement: placement,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n});\n_c3 = DropdownToggle;\nexport default DropdownToggle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DropdownToggleDefaultContent\");\n$RefreshReg$(_c2, \"DropdownToggle$React.forwardRef\");\n$RefreshReg$(_c3, \"DropdownToggle\");","map":{"version":3,"names":["React","classNames","HiChevronDown","HiChevronUp","HiChevronRight","HiChevronLeft","jsxDEV","_jsxDEV","Fragment","_Fragment","DropdownToggleDefaultContent","placement","children","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","DropdownToggle","forwardRef","_c2","props","ref","className","renderTitle","inSidenav","disabled","toggleClassName","rest","toggleClass","disabledClass","dropdownToggleClass","dropdownToggleDefaultClass","_c3","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Dropdown/DropdownToggle.js"],"sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport { HiChevronDown, HiChevronUp, HiChevronRight, HiChevronLeft } from 'react-icons/hi'\n\nconst DropdownToggleDefaultContent = ({placement, children}) => {\n\t// TODO: impl rtl handling\n\tif(placement && placement.includes('middle-start')) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t\t<HiChevronRight />\n\t\t\t</>\n\t\t)\n\t}\n\n\tif(placement && placement.includes('middle-end')) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<HiChevronLeft />\n\t\t\t\t{children}\n\t\t\t</>\n\t\t)\n\t}\n\n\tif(placement && placement.includes('top')) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{children}\n\t\t\t\t<HiChevronUp />\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{children}\n\t\t\t<HiChevronDown />\n\t\t</>\n\t)\n}\n\n\nconst DropdownToggle = React.forwardRef((props, ref) => {\n\n\tconst {\n\t\tclassName,\n\t\trenderTitle,\n\t\tchildren,\n\t\tplacement,\n\t\tinSidenav,\n\t\tdisabled,\n\t\ttoggleClassName,\n\t\t...rest\n\t} = props\n\n\tconst toggleClass = 'dropdown-toggle'\n\tconst disabledClass = 'dropdown-toggle-disabled'\n\n\tconst dropdownToggleClass = classNames(\n\t\ttoggleClass,\n\t\tclassName,\n\t\ttoggleClassName,\n\t\tdisabled && disabledClass\n\t)\n\n\tconst dropdownToggleDefaultClass = classNames(\n\t\tdropdownToggleClass,\n\t\t'dropdown-toggle-default'\n\t)\n\n\tif (renderTitle) {\n\t\treturn (\n\t\t\t<div className={dropdownToggleClass} {...rest} ref={ref}>\n\t\t\t\t{renderTitle}\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div ref={ref} className={dropdownToggleDefaultClass} {...rest}>\n\t\t\t<span className=\"flex items-center\">\n\t\t\t\t<DropdownToggleDefaultContent placement={placement}>\n\t\t\t\t\t{children}\n\t\t\t\t</ DropdownToggleDefaultContent>\n\t\t\t</span>\n\t\t</div>\n  \t)\n})\n\nexport default DropdownToggle\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}