{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Checkbox\\\\Checkbox.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckboxGroupContext from \"./context\";\nimport useThemeClass from \"utils/hooks/useThemeClass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkbox = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const {\n    name: nameContext,\n    value: groupValue,\n    onChange: onGroupChange,\n    color: colorContext\n  } = useContext(CheckboxGroupContext);\n  const {\n    color,\n    className,\n    onChange,\n    children,\n    disabled,\n    readOnly,\n    name = nameContext,\n    defaultChecked,\n    value,\n    checked: controlledChecked,\n    labelRef,\n    field,\n    ...rest\n  } = props;\n  const {\n    themeColorAndLevel\n  } = useThemeClass();\n  const isChecked = useCallback(() => {\n    if (typeof groupValue !== \"undefined\" && typeof value !== \"undefined\") {\n      return groupValue.some(i => i === value);\n    }\n    return controlledChecked || defaultChecked;\n  }, [controlledChecked, groupValue, value, defaultChecked]);\n  const [checkboxChecked, setCheckboxChecked] = useState(isChecked());\n  const getControlProps = () => {\n    let checkedValue = checkboxChecked;\n    let groupChecked = {\n      checked: checkedValue\n    };\n    let singleChecked = {\n      value: checkedValue\n    };\n    if (controlledChecked !== \"undefined\") {\n      singleChecked.checked = controlledChecked;\n    }\n    if (field) {\n      checkedValue = typeof field.value === \"boolean\" ? field.value : defaultChecked;\n      singleChecked = {\n        value: checkedValue,\n        checked: checkedValue\n      };\n    }\n    if (typeof groupValue !== \"undefined\") {\n      groupChecked = {\n        checked: groupValue.includes(value)\n      };\n    }\n    if (defaultChecked) {\n      singleChecked.defaultChecked = defaultChecked;\n    }\n    return typeof groupValue !== \"undefined\" ? groupChecked : singleChecked;\n  };\n  const controlProps = getControlProps();\n  const onCheckboxChange = useCallback(e => {\n    let nextChecked = !checkboxChecked;\n    if (typeof groupValue !== \"undefined\") {\n      nextChecked = !groupValue.includes(value);\n    }\n    if (disabled || readOnly) {\n      return;\n    }\n    setCheckboxChecked(nextChecked);\n    onChange === null || onChange === void 0 ? void 0 : onChange(nextChecked, e);\n    onGroupChange === null || onGroupChange === void 0 ? void 0 : onGroupChange(value, nextChecked, e);\n  }, [checkboxChecked, disabled, readOnly, setCheckboxChecked, onChange, value, onGroupChange, groupValue]);\n  const checkboxColor = color || colorContext || `${themeColorAndLevel}`;\n  const checkboxDefaultClass = `checkbox text-${checkboxColor}`;\n  const checkboxColorClass = disabled && \"disabled\";\n  const labelDefaultClass = `checkbox-label`;\n  const labelDisabledClass = disabled && \"disabled\";\n  const checkBoxClass = classNames(checkboxDefaultClass, checkboxColorClass);\n  const labelClass = classNames(labelDefaultClass, labelDisabledClass, className);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    ref: labelRef,\n    className: labelClass,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: ref,\n      className: checkBoxClass,\n      type: \"checkbox\",\n      disabled: disabled,\n      readOnly: readOnly,\n      onChange: onCheckboxChange,\n      name: name,\n      ...controlProps,\n      ...field,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), children ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classNames(\"ltr:ml-2 rtl:mr-2\", disabled ? \"opacity-50\" : \"\"),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}, \"ZUDfQm4XUP9L4qwDgXC9wWeUWTw=\", false, function () {\n  return [useThemeClass];\n})), \"ZUDfQm4XUP9L4qwDgXC9wWeUWTw=\", false, function () {\n  return [useThemeClass];\n});\n_c2 = Checkbox;\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  color: PropTypes.string,\n  onChange: PropTypes.func,\n  labelRef: PropTypes.string,\n  value: PropTypes.any\n};\nexport default Checkbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"Checkbox$React.forwardRef\");\n$RefreshReg$(_c2, \"Checkbox\");","map":{"version":3,"names":["React","useContext","useCallback","useState","PropTypes","classNames","CheckboxGroupContext","useThemeClass","jsxDEV","_jsxDEV","Checkbox","_s","forwardRef","_c","props","ref","name","nameContext","value","groupValue","onChange","onGroupChange","color","colorContext","className","children","disabled","readOnly","defaultChecked","checked","controlledChecked","labelRef","field","rest","themeColorAndLevel","isChecked","some","i","checkboxChecked","setCheckboxChecked","getControlProps","checkedValue","groupChecked","singleChecked","includes","controlProps","onCheckboxChange","e","nextChecked","checkboxColor","checkboxDefaultClass","checkboxColorClass","labelDefaultClass","labelDisabledClass","checkBoxClass","labelClass","type","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","bool","string","func","any","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Checkbox/Checkbox.js"],"sourcesContent":["import React, { useContext, useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckboxGroupContext from \"./context\";\nimport useThemeClass from \"utils/hooks/useThemeClass\";\n\nconst Checkbox = React.forwardRef((props, ref) => {\n  const {\n    name: nameContext,\n    value: groupValue,\n    onChange: onGroupChange,\n    color: colorContext,\n  } = useContext(CheckboxGroupContext);\n\n  const {\n    color,\n    className,\n    onChange,\n    children,\n    disabled,\n    readOnly,\n    name = nameContext,\n    defaultChecked,\n    value,\n    checked: controlledChecked,\n    labelRef,\n    field,\n    ...rest\n  } = props;\n\n  const { themeColorAndLevel } = useThemeClass();\n\n  const isChecked = useCallback(() => {\n    if (typeof groupValue !== \"undefined\" && typeof value !== \"undefined\") {\n      return groupValue.some((i) => i === value);\n    }\n    return controlledChecked || defaultChecked;\n  }, [controlledChecked, groupValue, value, defaultChecked]);\n\n  const [checkboxChecked, setCheckboxChecked] = useState(isChecked());\n\n  const getControlProps = () => {\n    let checkedValue = checkboxChecked;\n\n    let groupChecked = { checked: checkedValue };\n    let singleChecked = { value: checkedValue };\n\n    if (controlledChecked !== \"undefined\") {\n      singleChecked.checked = controlledChecked;\n    }\n\n    if (field) {\n      checkedValue =\n        typeof field.value === \"boolean\" ? field.value : defaultChecked;\n      singleChecked = { value: checkedValue, checked: checkedValue };\n    }\n\n    if (typeof groupValue !== \"undefined\") {\n      groupChecked = { checked: groupValue.includes(value) };\n    }\n\n    if (defaultChecked) {\n      singleChecked.defaultChecked = defaultChecked;\n    }\n    return typeof groupValue !== \"undefined\" ? groupChecked : singleChecked;\n  };\n\n  const controlProps = getControlProps();\n\n  const onCheckboxChange = useCallback(\n    (e) => {\n      let nextChecked = !checkboxChecked;\n\n      if (typeof groupValue !== \"undefined\") {\n        nextChecked = !groupValue.includes(value);\n      }\n\n      if (disabled || readOnly) {\n        return;\n      }\n\n      setCheckboxChecked(nextChecked);\n      onChange?.(nextChecked, e);\n      onGroupChange?.(value, nextChecked, e);\n    },\n    [\n      checkboxChecked,\n      disabled,\n      readOnly,\n      setCheckboxChecked,\n      onChange,\n      value,\n      onGroupChange,\n      groupValue,\n    ]\n  );\n\n  const checkboxColor = color || colorContext || `${themeColorAndLevel}`;\n\n  const checkboxDefaultClass = `checkbox text-${checkboxColor}`;\n  const checkboxColorClass = disabled && \"disabled\";\n  const labelDefaultClass = `checkbox-label`;\n  const labelDisabledClass = disabled && \"disabled\";\n\n  const checkBoxClass = classNames(checkboxDefaultClass, checkboxColorClass);\n\n  const labelClass = classNames(\n    labelDefaultClass,\n    labelDisabledClass,\n    className\n  );\n\n  return (\n    <label ref={labelRef} className={labelClass}>\n      <input\n        ref={ref}\n        className={checkBoxClass}\n        type=\"checkbox\"\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={onCheckboxChange}\n        name={name}\n        {...controlProps}\n        {...field}\n        {...rest}\n      />\n      {children ? (\n        <span\n          className={classNames(\n            \"ltr:ml-2 rtl:mr-2\",\n            disabled ? \"opacity-50\" : \"\"\n          )}\n        >\n          {children}\n        </span>\n      ) : null}\n    </label>\n  );\n});\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  color: PropTypes.string,\n  onChange: PropTypes.func,\n  labelRef: PropTypes.string,\n  value: PropTypes.any,\n};\n\nexport default Checkbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}