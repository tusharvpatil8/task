{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Upload\\\\FileItem.js\";\nimport React from \"react\";\nimport { VscFilePdf, VscFileZip, VscFile } from \"react-icons/vsc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BYTE = 1000;\nconst getKB = bytes => Math.round(bytes / BYTE);\nconst FileIcon = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-4xl\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_c = FileIcon;\nconst FileItem = props => {\n  const {\n    file,\n    children\n  } = props;\n  const {\n    type,\n    name,\n    size\n  } = file;\n  const renderThumbnail = () => {\n    const isImageFile = type.split(\"/\")[0] === \"image\";\n    if (isImageFile) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"upload-file-image\",\n        src: URL.createObjectURL(file),\n        alt: `file preview ${name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    }\n    if (type === \"application/zip\") {\n      return /*#__PURE__*/_jsxDEV(FileIcon, {\n        children: /*#__PURE__*/_jsxDEV(VscFileZip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n    if (type === \"application/pdf\") {\n      return /*#__PURE__*/_jsxDEV(FileIcon, {\n        children: /*#__PURE__*/_jsxDEV(VscFilePdf, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(FileIcon, {\n      children: /*#__PURE__*/_jsxDEV(VscFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-file\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-file-thumbnail\",\n        children: renderThumbnail()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-file-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"upload-file-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"upload-file-size\",\n          children: [getKB(size), \" kb\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FileItem;\nexport default FileItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileIcon\");\n$RefreshReg$(_c2, \"FileItem\");","map":{"version":3,"names":["React","VscFilePdf","VscFileZip","VscFile","jsxDEV","_jsxDEV","BYTE","getKB","bytes","Math","round","FileIcon","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","FileItem","props","file","type","name","size","renderThumbnail","isImageFile","split","src","URL","createObjectURL","alt","_c2","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Upload/FileItem.js"],"sourcesContent":["import React from \"react\";\nimport { VscFilePdf, VscFileZip, VscFile } from \"react-icons/vsc\";\n\nconst BYTE = 1000;\nconst getKB = (bytes) => Math.round(bytes / BYTE);\n\nconst FileIcon = ({ children }) => {\n  return <span className=\"text-4xl\">{children}</span>;\n};\n\nconst FileItem = (props) => {\n  const { file, children } = props;\n  const { type, name, size } = file;\n\n  const renderThumbnail = () => {\n    const isImageFile = type.split(\"/\")[0] === \"image\";\n\n    if (isImageFile) {\n      return (\n        <img\n          className=\"upload-file-image\"\n          src={URL.createObjectURL(file)}\n          alt={`file preview ${name}`}\n        />\n      );\n    }\n\n    if (type === \"application/zip\") {\n      return (\n        <FileIcon>\n          <VscFileZip />\n        </FileIcon>\n      );\n    }\n\n    if (type === \"application/pdf\") {\n      return (\n        <FileIcon>\n          <VscFilePdf />\n        </FileIcon>\n      );\n    }\n\n    return (\n      <FileIcon>\n        <VscFile />\n      </FileIcon>\n    );\n  };\n\n  return (\n    <div className=\"upload-file\">\n      <div className=\"flex\">\n        <div className=\"upload-file-thumbnail\">{renderThumbnail()}</div>\n        <div className=\"upload-file-info\">\n          <h6 className=\"upload-file-name\">{name}</h6>\n          <span className=\"upload-file-size\">{getKB(size)} kb</span>\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default FileItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}