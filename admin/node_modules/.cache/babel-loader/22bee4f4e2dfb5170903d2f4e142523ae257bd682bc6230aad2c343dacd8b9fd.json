{"ast":null,"code":"import api from './api';\nexport const addSingleProductImage = formData => {\n  return api.post(`common/image`, formData);\n};\n\n// export const uploadSingleImage = (imageFile) => {\n//   const imageDate = new FormData();\n//   imageDate.append('image', imageFile);\n//   return api.post('common/image', imageDate);\n// };\n\nexport const uploadSingleImage = async formData => {\n  try {\n    const res = await api.post(\"/common/image\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    console.log(\"res.data\", res.data);\n    return res.data;\n  } catch (err) {\n    var _err$response;\n    throw ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err;\n  }\n};\n\n// service/commonService.js\n\nexport const uploadMultiImage = async files => {\n  const formData = new FormData();\n  files.forEach(file => {\n    formData.append('images', file);\n  });\n  try {\n    var _response$data;\n    const response = await api.post('common/images', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    console.log('Image Upload Response:', response.data);\n    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length) > 0) {\n      return {\n        success: true,\n        data: response.data\n      };\n    } else {\n      throw new Error(response.data.message || 'Image upload failed');\n    }\n  } catch (error) {\n    console.error('Error uploading images:', error.message);\n    return {\n      success: false,\n      message: error.message || 'Image upload failed'\n    };\n  }\n};","map":{"version":3,"names":["api","addSingleProductImage","formData","post","uploadSingleImage","res","headers","console","log","data","err","_err$response","response","uploadMultiImage","files","FormData","forEach","file","append","_response$data","length","success","Error","message","error"],"sources":["C:/Projects/task-app/admin/src/service/commonService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const addSingleProductImage = (formData) => {\r\n  return api.post(`common/image`, formData);\r\n};\r\n\r\n// export const uploadSingleImage = (imageFile) => {\r\n//   const imageDate = new FormData();\r\n//   imageDate.append('image', imageFile);\r\n//   return api.post('common/image', imageDate);\r\n// };\r\n\r\nexport const uploadSingleImage = async (formData) => {\r\n  try {\r\n    const res = await api.post(\"/common/image\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    console.log(\"res.data\",res.data)\r\n    return res.data;\r\n  } catch (err) {\r\n    throw err.response?.data || err;\r\n  }\r\n};\r\n\r\n// service/commonService.js\r\n\r\nexport const uploadMultiImage = async (files) => {\r\n  const formData = new FormData();\r\n\r\n  files.forEach((file) => {\r\n    formData.append('images', file);\r\n  });\r\n\r\n  try {\r\n    const response = await api.post('common/images', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    console.log('Image Upload Response:', response.data);\r\n\r\n    if (response?.data?.length > 0) {\r\n      return {\r\n        success: true,\r\n        data: response.data,\r\n      };\r\n    } else {\r\n      throw new Error(response.data.message || 'Image upload failed');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error uploading images:', error.message);\r\n    return {\r\n      success: false,\r\n      message: error.message || 'Image upload failed',\r\n    };\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,qBAAqB,GAAIC,QAAQ,IAAK;EACjD,OAAOF,GAAG,CAACG,IAAI,CAAE,cAAa,EAAED,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,iBAAiB,GAAG,MAAOF,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMG,GAAG,GAAG,MAAML,GAAG,CAACG,IAAI,CAAC,eAAe,EAAED,QAAQ,EAAE;MACpDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,GAAG,CAACI,IAAI,CAAC;IAChC,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,MAAM,EAAAA,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG;EACjC;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMG,gBAAgB,GAAG,MAAOC,KAAK,IAAK;EAC/C,MAAMZ,QAAQ,GAAG,IAAIa,QAAQ,CAAC,CAAC;EAE/BD,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAK;IACtBf,QAAQ,CAACgB,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;EACjC,CAAC,CAAC;EAEF,IAAI;IAAA,IAAAE,cAAA;IACF,MAAMP,QAAQ,GAAG,MAAMZ,GAAG,CAACG,IAAI,CAAC,eAAe,EAAED,QAAQ,EAAE;MACzDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEI,QAAQ,CAACH,IAAI,CAAC;IAEpD,IAAI,CAAAG,QAAQ,aAARA,QAAQ,wBAAAO,cAAA,GAARP,QAAQ,CAAEH,IAAI,cAAAU,cAAA,uBAAdA,cAAA,CAAgBC,MAAM,IAAG,CAAC,EAAE;MAC9B,OAAO;QACLC,OAAO,EAAE,IAAI;QACbZ,IAAI,EAAEG,QAAQ,CAACH;MACjB,CAAC;IACH,CAAC,MAAM;MACL,MAAM,IAAIa,KAAK,CAACV,QAAQ,CAACH,IAAI,CAACc,OAAO,IAAI,qBAAqB,CAAC;IACjE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACD,OAAO,CAAC;IACvD,OAAO;MACLF,OAAO,EAAE,KAAK;MACdE,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAC5B,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}