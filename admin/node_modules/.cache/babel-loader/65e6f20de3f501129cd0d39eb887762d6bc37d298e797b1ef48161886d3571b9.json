{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Menu\\\\Menu.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContextProvider } from \"./context/menuContext\";\nimport PropTypes from \"prop-types\";\n// import useThemeClass from \"utils/hooks/useThemeClass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    children,\n    className,\n    defaultActiveKeys,\n    defaultExpandedKeys,\n    menuItemHeight,\n    onSelect,\n    sideCollapsed,\n    variant,\n    ...rest\n  } = props;\n  const menuDefaultClass = \"menu \";\n\n  // const { themeColorAndLevel } = useThemeClass();\n\n  const menuColor = () => {\n    if (variant === \"themed\") {\n      return ` ${menuDefaultClass}-${variant}`;\n    }\n    return `${menuDefaultClass}-${variant} `;\n  };\n  const menuClass = classNames(menuDefaultClass, menuColor(), className);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    ref: ref,\n    className: menuClass,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(MenuContextProvider, {\n      value: {\n        onSelect,\n        menuItemHeight,\n        variant,\n        sideCollapsed,\n        defaultExpandedKeys,\n        defaultActiveKeys\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Menu;\nMenu.propTypes = {\n  menuItemHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.oneOf([\"light\", \"dark\", \"themed\", \"transparent\"]),\n  sideCollapsed: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultActiveKeys: PropTypes.arrayOf(PropTypes.string)\n};\nMenu.defaultProps = {\n  menuItemHeight: 40,\n  variant: \"light\",\n  sideCollapsed: false,\n  defaultExpandedKeys: [],\n  defaultActiveKeys: []\n};\nexport default Menu;\nvar _c, _c2;\n$RefreshReg$(_c, \"Menu$React.forwardRef\");\n$RefreshReg$(_c2, \"Menu\");","map":{"version":3,"names":["React","classNames","MenuContextProvider","PropTypes","jsxDEV","_jsxDEV","Menu","forwardRef","_c","props","ref","children","className","defaultActiveKeys","defaultExpandedKeys","menuItemHeight","onSelect","sideCollapsed","variant","rest","menuDefaultClass","menuColor","menuClass","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","oneOfType","string","number","oneOf","bool","arrayOf","defaultProps","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Menu/Menu.js"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContextProvider } from \"./context/menuContext\";\nimport PropTypes from \"prop-types\";\n// import useThemeClass from \"utils/hooks/useThemeClass\";\n\nconst Menu = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    defaultActiveKeys,\n    defaultExpandedKeys,\n    menuItemHeight,\n    onSelect,\n    sideCollapsed,\n    variant,\n    ...rest\n  } = props;\n\n  const menuDefaultClass = \"menu \";\n\n  // const { themeColorAndLevel } = useThemeClass();\n\n  const menuColor = () => {\n    if (variant === \"themed\") {\n      return ` ${menuDefaultClass}-${variant}`;\n    }\n    return `${menuDefaultClass}-${variant} `;\n  };\n\n  const menuClass = classNames(menuDefaultClass, menuColor(), className);\n\n  return (\n    <nav ref={ref} className={menuClass} {...rest}>\n      <MenuContextProvider\n        value={{\n          onSelect,\n          menuItemHeight,\n          variant,\n          sideCollapsed,\n          defaultExpandedKeys,\n          defaultActiveKeys,\n        }}\n      >\n        {children}\n      </MenuContextProvider>\n    </nav>\n  );\n});\n\nMenu.propTypes = {\n  menuItemHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.oneOf([\"light\", \"dark\", \"themed\", \"transparent\"]),\n  sideCollapsed: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultActiveKeys: PropTypes.arrayOf(PropTypes.string),\n};\n\nMenu.defaultProps = {\n  menuItemHeight: 40,\n  variant: \"light\",\n  sideCollapsed: false,\n  defaultExpandedKeys: [],\n  defaultActiveKeys: [],\n};\n\nexport default Menu;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,OAAOC,SAAS,MAAM,YAAY;AAClC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,gBAAGN,KAAK,CAACO,UAAU,CAAAC,EAAA,GAACA,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC5C,MAAM;IACJC,QAAQ;IACRC,SAAS;IACTC,iBAAiB;IACjBC,mBAAmB;IACnBC,cAAc;IACdC,QAAQ;IACRC,aAAa;IACbC,OAAO;IACP,GAAGC;EACL,CAAC,GAAGV,KAAK;EAET,MAAMW,gBAAgB,GAAG,OAAO;;EAEhC;;EAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIH,OAAO,KAAK,QAAQ,EAAE;MACxB,OAAQ,IAAGE,gBAAiB,IAAGF,OAAQ,EAAC;IAC1C;IACA,OAAQ,GAAEE,gBAAiB,IAAGF,OAAQ,GAAE;EAC1C,CAAC;EAED,MAAMI,SAAS,GAAGrB,UAAU,CAACmB,gBAAgB,EAAEC,SAAS,CAAC,CAAC,EAAET,SAAS,CAAC;EAEtE,oBACEP,OAAA;IAAKK,GAAG,EAAEA,GAAI;IAACE,SAAS,EAAEU,SAAU;IAAA,GAAKH,IAAI;IAAAR,QAAA,eAC3CN,OAAA,CAACH,mBAAmB;MAClBqB,KAAK,EAAE;QACLP,QAAQ;QACRD,cAAc;QACdG,OAAO;QACPD,aAAa;QACbH,mBAAmB;QACnBD;MACF,CAAE;MAAAF,QAAA,EAEDA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC,CAAC;AAACC,GAAA,GA1CGtB,IAAI;AA4CVA,IAAI,CAACuB,SAAS,GAAG;EACfd,cAAc,EAAEZ,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC4B,MAAM,EAAE5B,SAAS,CAAC6B,MAAM,CAAC,CAAC;EACzEd,OAAO,EAAEf,SAAS,CAAC8B,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;EACpEhB,aAAa,EAAEd,SAAS,CAAC+B,IAAI;EAC7BpB,mBAAmB,EAAEX,SAAS,CAACgC,OAAO,CAAChC,SAAS,CAAC4B,MAAM,CAAC;EACxDlB,iBAAiB,EAAEV,SAAS,CAACgC,OAAO,CAAChC,SAAS,CAAC4B,MAAM;AACvD,CAAC;AAEDzB,IAAI,CAAC8B,YAAY,GAAG;EAClBrB,cAAc,EAAE,EAAE;EAClBG,OAAO,EAAE,OAAO;EAChBD,aAAa,EAAE,KAAK;EACpBH,mBAAmB,EAAE,EAAE;EACvBD,iBAAiB,EAAE;AACrB,CAAC;AAED,eAAeP,IAAI;AAAC,IAAAE,EAAA,EAAAoB,GAAA;AAAAS,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAT,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}