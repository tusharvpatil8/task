{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\views\\\\auth\\\\SignIn\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SignInForm from \"./SignInForm\";\nimport { isAdminExists } from \"service/authService\";\nimport { Spinner } from \"components/ui\";\nimport SignUpForm from \"../SignUp/SignUpForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [checkAdminExists, setCheckAdminExists] = useState();\n  const [loading, setLoading] = useState(false);\n  const checkIsAdminExist = async () => {\n    try {\n      setLoading(true);\n      const resp = await isAdminExists();\n      if (resp !== null && resp !== void 0 && resp.success) setCheckAdminExists(true);else setCheckAdminExists(false);\n    } catch (err) {\n      console.error(\"Failed to fetch admin count:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkIsAdminExist();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-32\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: checkAdminExists ? /*#__PURE__*/_jsxDEV(SignInForm, {\n        disableSubmit: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(SignUpForm, {\n        disableSubmit: false,\n        checkIsAdminExist: checkIsAdminExist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(SignIn, \"msPS1hN3F5WUF7Li7kX7SD0ZOjs=\");\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useEffect","useState","SignInForm","isAdminExists","Spinner","SignUpForm","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","checkAdminExists","setCheckAdminExists","loading","setLoading","checkIsAdminExist","resp","success","err","console","error","children","className","size","fileName","_jsxFileName","lineNumber","columnNumber","disableSubmit","_c","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/views/auth/SignIn/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SignInForm from \"./SignInForm\";\r\nimport { isAdminExists } from \"service/authService\";\r\nimport { Spinner } from \"components/ui\";\r\nimport SignUpForm from \"../SignUp/SignUpForm\";\r\n\r\nconst SignIn = () => {\r\n  const [checkAdminExists, setCheckAdminExists] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const checkIsAdminExist = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const resp = await isAdminExists();\r\n\r\n      if (resp?.success) setCheckAdminExists(true);\r\n      else setCheckAdminExists(false);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch admin count:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIsAdminExist();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center h-32\">\r\n          <Spinner size={30} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {checkAdminExists ? (\r\n            <SignInForm disableSubmit={false} />\r\n          ) : (\r\n            <SignUpForm\r\n              disableSubmit={false}\r\n              checkIsAdminExist={checkIsAdminExist}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC1D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAME,IAAI,GAAG,MAAMd,aAAa,CAAC,CAAC;MAElC,IAAIc,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,OAAO,EAAEL,mBAAmB,CAAC,IAAI,CAAC,CAAC,KACxCA,mBAAmB,CAAC,KAAK,CAAC;IACjC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;IACpD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdgB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGR,OAAO,gBACNP,OAAA;MAAKgB,SAAS,EAAC,uCAAuC;MAAAD,QAAA,eACpDf,OAAA,CAACH,OAAO;QAACoB,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,gBAENrB,OAAA,CAAAE,SAAA;MAAAa,QAAA,EACGV,gBAAgB,gBACfL,OAAA,CAACL,UAAU;QAAC2B,aAAa,EAAE;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEpCrB,OAAA,CAACF,UAAU;QACTwB,aAAa,EAAE,KAAM;QACrBb,iBAAiB,EAAEA;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IACF,gBACD;EACH,gBACD,CAAC;AAEP,CAAC;AAACjB,EAAA,CA1CID,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}