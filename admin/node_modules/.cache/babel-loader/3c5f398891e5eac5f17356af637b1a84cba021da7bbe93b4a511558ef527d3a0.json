{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Badge\\\\Badge.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    content,\n    maxCount,\n    className,\n    innerClass,\n    children,\n    badgeStyle,\n    ...rest\n  } = props;\n  const dot = typeof content !== \"number\" && typeof content !== \"string\";\n  const badgeClass = classNames(dot ? \"badge-dot\" : \"badge\", innerClass);\n  const renderBadge = () => {\n    if (children) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNames(\"badge-wrapper\", className),\n        ref: ref,\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames(badgeClass, \"badge-inner\"),\n          style: badgeStyle,\n          children: typeof content === \"number\" && content > maxCount ? `${maxCount}+` : content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classNames(badgeClass, className),\n      ref: ref,\n      style: badgeStyle,\n      ...rest,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n  return renderBadge();\n});\n_c2 = Badge;\nBadge.defaultProps = {\n  maxCount: 99\n};\nBadge.propTypes = {\n  innerClass: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxCount: PropTypes.number,\n  badgeStyle: PropTypes.object\n};\nexport default Badge;\nvar _c, _c2;\n$RefreshReg$(_c, \"Badge$React.forwardRef\");\n$RefreshReg$(_c2, \"Badge\");","map":{"version":3,"names":["React","classNames","PropTypes","jsxDEV","_jsxDEV","Badge","forwardRef","_c","props","ref","content","maxCount","className","innerClass","children","badgeStyle","rest","dot","badgeClass","renderBadge","style","fileName","_jsxFileName","lineNumber","columnNumber","_c2","defaultProps","propTypes","string","oneOfType","number","object","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Badge/Badge.js"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst Badge = React.forwardRef((props, ref) => {\n  const {\n    content,\n    maxCount,\n    className,\n    innerClass,\n    children,\n    badgeStyle,\n    ...rest\n  } = props;\n\n  const dot = typeof content !== \"number\" && typeof content !== \"string\";\n\n  const badgeClass = classNames(dot ? \"badge-dot\" : \"badge\", innerClass);\n\n  const renderBadge = () => {\n    if (children) {\n      return (\n        <span\n          className={classNames(\"badge-wrapper\", className)}\n          ref={ref}\n          {...rest}\n        >\n          <span\n            className={classNames(badgeClass, \"badge-inner\")}\n            style={badgeStyle}\n          >\n            {typeof content === \"number\" && content > maxCount\n              ? `${maxCount}+`\n              : content}\n          </span>\n          {children}\n        </span>\n      );\n    }\n    return (\n      <span\n        className={classNames(badgeClass, className)}\n        ref={ref}\n        style={badgeStyle}\n        {...rest}\n      >\n        {content}\n      </span>\n    );\n  };\n\n  return renderBadge();\n});\n\nBadge.defaultProps = {\n  maxCount: 99,\n};\n\nBadge.propTypes = {\n  innerClass: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxCount: PropTypes.number,\n  badgeStyle: PropTypes.object,\n};\n\nexport default Badge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,KAAK,gBAAGL,KAAK,CAACM,UAAU,CAAAC,EAAA,GAACA,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC7C,MAAM;IACJC,OAAO;IACPC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,QAAQ;IACRC,UAAU;IACV,GAAGC;EACL,CAAC,GAAGR,KAAK;EAET,MAAMS,GAAG,GAAG,OAAOP,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,KAAK,QAAQ;EAEtE,MAAMQ,UAAU,GAAGjB,UAAU,CAACgB,GAAG,GAAG,WAAW,GAAG,OAAO,EAAEJ,UAAU,CAAC;EAEtE,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIL,QAAQ,EAAE;MACZ,oBACEV,OAAA;QACEQ,SAAS,EAAEX,UAAU,CAAC,eAAe,EAAEW,SAAS,CAAE;QAClDH,GAAG,EAAEA,GAAI;QAAA,GACLO,IAAI;QAAAF,QAAA,gBAERV,OAAA;UACEQ,SAAS,EAAEX,UAAU,CAACiB,UAAU,EAAE,aAAa,CAAE;UACjDE,KAAK,EAAEL,UAAW;UAAAD,QAAA,EAEjB,OAAOJ,OAAO,KAAK,QAAQ,IAAIA,OAAO,GAAGC,QAAQ,GAC7C,GAAEA,QAAS,GAAE,GACdD;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,EACNV,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEX;IACA,oBACEpB,OAAA;MACEQ,SAAS,EAAEX,UAAU,CAACiB,UAAU,EAAEN,SAAS,CAAE;MAC7CH,GAAG,EAAEA,GAAI;MACTW,KAAK,EAAEL,UAAW;MAAA,GACdC,IAAI;MAAAF,QAAA,EAEPJ;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEX,CAAC;EAED,OAAOL,WAAW,CAAC,CAAC;AACtB,CAAC,CAAC;AAACM,GAAA,GAhDGpB,KAAK;AAkDXA,KAAK,CAACqB,YAAY,GAAG;EACnBf,QAAQ,EAAE;AACZ,CAAC;AAEDN,KAAK,CAACsB,SAAS,GAAG;EAChBd,UAAU,EAAEX,SAAS,CAAC0B,MAAM;EAC5BlB,OAAO,EAAER,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC0B,MAAM,EAAE1B,SAAS,CAAC4B,MAAM,CAAC,CAAC;EAClEnB,QAAQ,EAAET,SAAS,CAAC4B,MAAM;EAC1Bf,UAAU,EAAEb,SAAS,CAAC6B;AACxB,CAAC;AAED,eAAe1B,KAAK;AAAC,IAAAE,EAAA,EAAAkB,GAAA;AAAAO,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAP,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}