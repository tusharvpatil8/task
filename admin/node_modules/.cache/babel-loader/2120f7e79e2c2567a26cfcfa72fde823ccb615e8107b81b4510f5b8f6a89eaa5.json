{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport default function useWindowSize() {\n  _s();\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n_s(useWindowSize, \"J9BENybIGqNw0/U+xsdkGfZ/Kpg=\");","map":{"version":3,"names":["useState","useEffect","useWindowSize","_s","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["C:/Projects/task-app/admin/src/components/ui/hooks/useWindowSize.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function useWindowSize() {\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t})\n\tuseEffect(() => {\n\t\tfunction handleResize() {\n\t\t\tsetWindowSize({\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t})\n\t\t}\n\t\twindow.addEventListener(\"resize\", handleResize)\n\t\thandleResize()\n\t\treturn () => window.removeEventListener(\"resize\", handleResize)\n\t}, [])\n\t\n\treturn windowSize\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC;IAC5CM,KAAK,EAAEC,SAAS;IAChBC,MAAM,EAAED;EACT,CAAC,CAAC;EACFN,SAAS,CAAC,MAAM;IACf,SAASQ,YAAYA,CAAA,EAAG;MACvBJ,aAAa,CAAC;QACbC,KAAK,EAAEI,MAAM,CAACC,UAAU;QACxBH,MAAM,EAAEE,MAAM,CAACE;MAChB,CAAC,CAAC;IACH;IACAF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAC/CA,YAAY,CAAC,CAAC;IACd,OAAO,MAAMC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,UAAU;AAClB;AAACD,EAAA,CAlBuBD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}