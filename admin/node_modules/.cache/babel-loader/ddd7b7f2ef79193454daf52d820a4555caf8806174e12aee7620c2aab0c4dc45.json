{"ast":null,"code":"const shortMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// day suffix\nconst getDaySuffix = day => {\n  if (day >= 11 && day <= 13) {\n    return \"th\";\n  }\n  const lastDigit = day % 10;\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n  return suffixes[lastDigit] || \"th\";\n};\n\n// format date - DD MM, YYYY\nexport const formatDateToDDMMMYYYY = dateStr => {\n  const date = new Date(dateStr);\n  const day = date.getDate();\n  const month = shortMonths[date.getMonth()];\n  const year = date.getUTCFullYear();\n  const suffix = getDaySuffix(day);\n  const formattedDate = `${day}${suffix} ${month}, ${year}`;\n  return formattedDate;\n};\n\n// format date - YYYY-MM-DD\nexport const formatDateToYYYYMMDD = dateStr => {\n  const date = new Date(dateStr);\n  const day = date.getDate(); // Extract day\n  const month = date.getMonth() + 1; // Get abbreviated month\n  const year = date.getUTCFullYear(); // Extract year\n  const formattedDate = `${year}-${month <= 9 ? `0${month}` : month}-${day < 10 ? `0${day}` : day}`;\n  return formattedDate;\n};\nexport const formatDateUTCToYYYYMMDD = dateStr => {\n  // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ dateStr:\", dateStr)\n  const date = new Date(dateStr);\n  // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ date:\", date)\n  const utcDate = date.toUTCString();\n  // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ utcDate:\", utcDate)\n  const isoDate = new Date(utcDate).toISOString();\n  // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ isoDate:\", isoDate)\n  return isoDate;\n};","map":{"version":3,"names":["shortMonths","getDaySuffix","day","lastDigit","suffixes","formatDateToDDMMMYYYY","dateStr","date","Date","getDate","month","getMonth","year","getUTCFullYear","suffix","formattedDate","formatDateToYYYYMMDD","formatDateUTCToYYYYMMDD","utcDate","toUTCString","isoDate","toISOString"],"sources":["C:/Projects/task-app/admin/src/utils/hoc/helper/dateFormat.js"],"sourcesContent":["const shortMonths = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  \n  // day suffix\n  const getDaySuffix = (day) => {\n    if (day >= 11 && day <= 13) {\n      return \"th\";\n    }\n    const lastDigit = day % 10;\n    const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n    return suffixes[lastDigit] || \"th\";\n  };\n  \n  // format date - DD MM, YYYY\n  export const formatDateToDDMMMYYYY = (dateStr) => {\n    const date = new Date(dateStr);\n    const day = date.getDate();\n    const month = shortMonths[date.getMonth()];\n    const year = date.getUTCFullYear();\n    const suffix = getDaySuffix(day);\n    const formattedDate = `${day}${suffix} ${month}, ${year}`;\n    return formattedDate;\n  };\n  \n  // format date - YYYY-MM-DD\n  export const formatDateToYYYYMMDD = (dateStr) => {\n    const date = new Date(dateStr);\n    const day = date.getDate(); // Extract day\n    const month = date.getMonth() + 1; // Get abbreviated month\n    const year = date.getUTCFullYear(); // Extract year\n    const formattedDate = `${year}-${month <= 9 ? `0${month}` : month}-${day < 10 ? `0${day}` : day}`;\n    return formattedDate;\n  };\n  \n  export const formatDateUTCToYYYYMMDD = (dateStr) => {\n    // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ dateStr:\", dateStr)\n    const date = new Date(dateStr);\n    // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ date:\", date)\n    const utcDate=date.toUTCString()\n    // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ utcDate:\", utcDate)\n    const isoDate=new Date(utcDate).toISOString()\n    // console.log(\"ðŸš€ ~ formatDateUTCToYYYYMMDD ~ isoDate:\", isoDate)\n    return isoDate;\n  };\n  \n  \n  "],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;;AAED;AACA,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAC5B,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE;IAC1B,OAAO,IAAI;EACb;EACA,MAAMC,SAAS,GAAGD,GAAG,GAAG,EAAE;EAC1B,MAAME,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACzC,OAAOA,QAAQ,CAACD,SAAS,CAAC,IAAI,IAAI;AACpC,CAAC;;AAED;AACA,OAAO,MAAME,qBAAqB,GAAIC,OAAO,IAAK;EAChD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,MAAMJ,GAAG,GAAGK,IAAI,CAACE,OAAO,CAAC,CAAC;EAC1B,MAAMC,KAAK,GAAGV,WAAW,CAACO,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EAC1C,MAAMC,IAAI,GAAGL,IAAI,CAACM,cAAc,CAAC,CAAC;EAClC,MAAMC,MAAM,GAAGb,YAAY,CAACC,GAAG,CAAC;EAChC,MAAMa,aAAa,GAAI,GAAEb,GAAI,GAAEY,MAAO,IAAGJ,KAAM,KAAIE,IAAK,EAAC;EACzD,OAAOG,aAAa;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAIV,OAAO,IAAK;EAC/C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,MAAMJ,GAAG,GAAGK,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMC,KAAK,GAAGH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnC,MAAMC,IAAI,GAAGL,IAAI,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC;EACpC,MAAME,aAAa,GAAI,GAAEH,IAAK,IAAGF,KAAK,IAAI,CAAC,GAAI,IAAGA,KAAM,EAAC,GAAGA,KAAM,IAAGR,GAAG,GAAG,EAAE,GAAI,IAAGA,GAAI,EAAC,GAAGA,GAAI,EAAC;EACjG,OAAOa,aAAa;AACtB,CAAC;AAED,OAAO,MAAME,uBAAuB,GAAIX,OAAO,IAAK;EAClD;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B;EACA,MAAMY,OAAO,GAACX,IAAI,CAACY,WAAW,CAAC,CAAC;EAChC;EACA,MAAMC,OAAO,GAAC,IAAIZ,IAAI,CAACU,OAAO,CAAC,CAACG,WAAW,CAAC,CAAC;EAC7C;EACA,OAAOD,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}