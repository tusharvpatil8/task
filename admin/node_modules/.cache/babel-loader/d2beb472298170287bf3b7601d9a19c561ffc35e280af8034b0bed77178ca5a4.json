{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst twBreakpoint = {\n  \"xs\": \"576\",\n  \"sm\": \"640px\",\n  \"md\": \"768px\",\n  \"lg\": \"1024px\",\n  \"xl\": \"1280px\",\n  \"2xl\": \"1536px\"\n};\nconst breakpointInt = (str = '') => {\n  return parseInt(str.replace('px', ''));\n};\nconst breakpoint = {\n  '2xl': breakpointInt(twBreakpoint['2xl']),\n  // 1536\n  xl: breakpointInt(twBreakpoint.xl),\n  // 1280\n  lg: breakpointInt(twBreakpoint.lg),\n  // 1024\n  md: breakpointInt(twBreakpoint.md),\n  // 768\n  sm: breakpointInt(twBreakpoint.sm),\n  // 640\n  xs: breakpointInt(twBreakpoint.xs) // 576\n};\nconst useResponsive = () => {\n  _s();\n  const getAllSizes = (comparator = 'smaller') => {\n    const currentWindowWidth = window.innerWidth;\n    return Object.fromEntries(Object.entries(breakpoint).map(([key, value]) => [key, comparator === 'larger' ? currentWindowWidth > value : currentWindowWidth < value]));\n  };\n  const getResponsiveState = () => {\n    const currentWindowWidth = window.innerWidth;\n    return {\n      windowWidth: currentWindowWidth,\n      larger: getAllSizes('larger'),\n      smaller: getAllSizes('smaller')\n    };\n  };\n  const [responsive, setResponsive] = useState(getResponsiveState());\n  const resizeHandler = () => {\n    const responsiveState = getResponsiveState();\n    setResponsive(responsiveState);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n    return () => window.removeEventListener('resize', resizeHandler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [responsive.windowWidth]);\n  return responsive;\n};\n_s(useResponsive, \"/GOgLHJhwYfaf1IBj/2bxFBzRJI=\");\nexport default useResponsive;","map":{"version":3,"names":["useEffect","useState","twBreakpoint","breakpointInt","str","parseInt","replace","breakpoint","xl","lg","md","sm","xs","useResponsive","_s","getAllSizes","comparator","currentWindowWidth","window","innerWidth","Object","fromEntries","entries","map","key","value","getResponsiveState","windowWidth","larger","smaller","responsive","setResponsive","resizeHandler","responsiveState","addEventListener","removeEventListener"],"sources":["C:/Projects/task-app/admin/src/utils/hooks/useResponsive.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { theme } from 'twin.macro'\r\n\r\nconst twBreakpoint = theme`screens`\r\n\r\nconst breakpointInt = (str = '') => {\r\n\treturn parseInt(str.replace('px',''))\r\n}\r\n\r\nconst breakpoint = {\r\n\t'2xl': breakpointInt(twBreakpoint['2xl']),  // 1536\r\n\txl: breakpointInt(twBreakpoint.xl), // 1280\r\n\tlg: breakpointInt(twBreakpoint.lg), // 1024\r\n\tmd: breakpointInt(twBreakpoint.md), // 768\r\n\tsm: breakpointInt(twBreakpoint.sm), // 640\r\n\txs: breakpointInt(twBreakpoint.xs), // 576\r\n}\r\n\r\nconst useResponsive = () => {\r\n\r\n\tconst getAllSizes = (comparator = 'smaller') => {\r\n\t\tconst currentWindowWidth = window.innerWidth\r\n\t\treturn Object.fromEntries(\r\n\t\t\tObject.entries(breakpoint).map(\r\n\t\t\t\t([key, value]) => [key, comparator === 'larger' ? (currentWindowWidth > value) : (currentWindowWidth < value)]\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\tconst getResponsiveState = () => {\r\n\t\tconst currentWindowWidth = window.innerWidth\r\n\t\treturn { \r\n\t\t\twindowWidth: currentWindowWidth,\r\n\t\t\tlarger: getAllSizes('larger'),\r\n\t\t\tsmaller: getAllSizes('smaller')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [responsive, setResponsive] = useState(getResponsiveState())\r\n\r\n\tconst resizeHandler = () => {\r\n\t\tconst responsiveState = getResponsiveState()\r\n\t\tsetResponsive(responsiveState)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', resizeHandler)\r\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [responsive.windowWidth])\r\n\r\n\treturn responsive\r\n}\r\n\r\nexport default useResponsive"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,MAAMC,YAAY,GAAG;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAa,CAAC;AAEnC,MAAMC,aAAa,GAAGA,CAACC,GAAG,GAAG,EAAE,KAAK;EACnC,OAAOC,QAAQ,CAACD,GAAG,CAACE,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;AACtC,CAAC;AAED,MAAMC,UAAU,GAAG;EAClB,KAAK,EAAEJ,aAAa,CAACD,YAAY,CAAC,KAAK,CAAC,CAAC;EAAG;EAC5CM,EAAE,EAAEL,aAAa,CAACD,YAAY,CAACM,EAAE,CAAC;EAAE;EACpCC,EAAE,EAAEN,aAAa,CAACD,YAAY,CAACO,EAAE,CAAC;EAAE;EACpCC,EAAE,EAAEP,aAAa,CAACD,YAAY,CAACQ,EAAE,CAAC;EAAE;EACpCC,EAAE,EAAER,aAAa,CAACD,YAAY,CAACS,EAAE,CAAC;EAAE;EACpCC,EAAE,EAAET,aAAa,CAACD,YAAY,CAACU,EAAE,CAAC,CAAE;AACrC,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAMC,WAAW,GAAGA,CAACC,UAAU,GAAG,SAAS,KAAK;IAC/C,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,UAAU;IAC5C,OAAOC,MAAM,CAACC,WAAW,CACxBD,MAAM,CAACE,OAAO,CAACf,UAAU,CAAC,CAACgB,GAAG,CAC7B,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACD,GAAG,EAAER,UAAU,KAAK,QAAQ,GAAIC,kBAAkB,GAAGQ,KAAK,GAAKR,kBAAkB,GAAGQ,KAAM,CAC9G,CACD,CAAC;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAChC,MAAMT,kBAAkB,GAAGC,MAAM,CAACC,UAAU;IAC5C,OAAO;MACNQ,WAAW,EAAEV,kBAAkB;MAC/BW,MAAM,EAAEb,WAAW,CAAC,QAAQ,CAAC;MAC7Bc,OAAO,EAAEd,WAAW,CAAC,SAAS;IAC/B,CAAC;EACF,CAAC;EAED,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAACyB,kBAAkB,CAAC,CAAC,CAAC;EAElE,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC3B,MAAMC,eAAe,GAAGP,kBAAkB,CAAC,CAAC;IAC5CK,aAAa,CAACE,eAAe,CAAC;EAC/B,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACfkB,MAAM,CAACgB,gBAAgB,CAAC,QAAQ,EAAEF,aAAa,CAAC;IAChD,OAAO,MAAMd,MAAM,CAACiB,mBAAmB,CAAC,QAAQ,EAAEH,aAAa,CAAC;IAChE;EACD,CAAC,EAAE,CAACF,UAAU,CAACH,WAAW,CAAC,CAAC;EAE5B,OAAOG,UAAU;AAClB,CAAC;AAAAhB,EAAA,CAlCKD,aAAa;AAoCnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}