{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\task-app\\\\admin\\\\src\\\\components\\\\ui\\\\Spinner\\\\Spinner.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { CgSpinner } from \"react-icons/cg\";\nimport useThemeClass from \"utils/hooks/useThemeClass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spinner = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const {\n    className,\n    color,\n    enableTheme,\n    indicator: Component,\n    isSpining,\n    size,\n    style,\n    ...rest\n  } = props;\n  const {\n    themeColorAndLevel\n  } = useThemeClass();\n  const spinnerColor = color || enableTheme && `${themeColorAndLevel}`;\n  const spinnerStyle = {\n    height: size,\n    width: size,\n    ...style\n  };\n  const spinnerClass = classNames(isSpining && \"animate-spin\", spinnerColor && `text-${spinnerColor}`, className);\n  return /*#__PURE__*/_jsxDEV(Component, {\n    ref: ref,\n    style: spinnerStyle,\n    className: spinnerClass,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}, \"f08kbZtHwIzs9HPuoBjwwHX5c6A=\", false, function () {\n  return [useThemeClass];\n})), \"f08kbZtHwIzs9HPuoBjwwHX5c6A=\", false, function () {\n  return [useThemeClass];\n});\n_c2 = Spinner;\nSpinner.defaultProps = {\n  indicator: CgSpinner,\n  isSpining: true,\n  size: 20,\n  enableTheme: true\n};\nSpinner.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.string,\n  indicator: PropTypes.elementType,\n  isSpining: PropTypes.bool,\n  enableTheme: PropTypes.bool\n};\nexport default Spinner;\nvar _c, _c2;\n$RefreshReg$(_c, \"Spinner$React.forwardRef\");\n$RefreshReg$(_c2, \"Spinner\");","map":{"version":3,"names":["React","classNames","PropTypes","CgSpinner","useThemeClass","jsxDEV","_jsxDEV","Spinner","_s","forwardRef","_c","props","ref","className","color","enableTheme","indicator","Component","isSpining","size","style","rest","themeColorAndLevel","spinnerColor","spinnerStyle","height","width","spinnerClass","fileName","_jsxFileName","lineNumber","columnNumber","_c2","defaultProps","propTypes","oneOfType","string","number","elementType","bool","$RefreshReg$"],"sources":["C:/Projects/task-app/admin/src/components/ui/Spinner/Spinner.js"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { CgSpinner } from \"react-icons/cg\";\nimport useThemeClass from \"utils/hooks/useThemeClass\";\n\nconst Spinner = React.forwardRef((props, ref) => {\n  const {\n    className,\n    color,\n    enableTheme,\n    indicator: Component,\n    isSpining,\n    size,\n    style,\n    ...rest\n  } = props;\n\n  const { themeColorAndLevel } = useThemeClass();\n\n  const spinnerColor = color || (enableTheme && `${themeColorAndLevel}`);\n\n  const spinnerStyle = {\n    height: size,\n    width: size,\n    ...style,\n  };\n\n  const spinnerClass = classNames(\n    isSpining && \"animate-spin\",\n    spinnerColor && `text-${spinnerColor}`,\n    className\n  );\n\n  return (\n    <Component\n      ref={ref}\n      style={spinnerStyle}\n      className={spinnerClass}\n      {...rest}\n    />\n  );\n});\n\nSpinner.defaultProps = {\n  indicator: CgSpinner,\n  isSpining: true,\n  size: 20,\n  enableTheme: true,\n};\n\nSpinner.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.string,\n  indicator: PropTypes.elementType,\n  isSpining: PropTypes.bool,\n  enableTheme: PropTypes.bool,\n};\n\nexport default Spinner;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAO,gBAAAC,EAAA,eAAGR,KAAK,CAACS,UAAU,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;EAAAJ,EAAA;EAC/C,MAAM;IACJK,SAAS;IACTC,KAAK;IACLC,WAAW;IACXC,SAAS,EAAEC,SAAS;IACpBC,SAAS;IACTC,IAAI;IACJC,KAAK;IACL,GAAGC;EACL,CAAC,GAAGV,KAAK;EAET,MAAM;IAAEW;EAAmB,CAAC,GAAGlB,aAAa,CAAC,CAAC;EAE9C,MAAMmB,YAAY,GAAGT,KAAK,IAAKC,WAAW,IAAK,GAAEO,kBAAmB,EAAE;EAEtE,MAAME,YAAY,GAAG;IACnBC,MAAM,EAAEN,IAAI;IACZO,KAAK,EAAEP,IAAI;IACX,GAAGC;EACL,CAAC;EAED,MAAMO,YAAY,GAAG1B,UAAU,CAC7BiB,SAAS,IAAI,cAAc,EAC3BK,YAAY,IAAK,QAAOA,YAAa,EAAC,EACtCV,SACF,CAAC;EAED,oBACEP,OAAA,CAACW,SAAS;IACRL,GAAG,EAAEA,GAAI;IACTQ,KAAK,EAAEI,YAAa;IACpBX,SAAS,EAAEc,YAAa;IAAA,GACpBN;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEN,CAAC;EAAA,QAxBgC3B,aAAa;AAAA,EAwB7C,CAAC;EAAA,QAxB+BA,aAAa;AAAA,EAwB5C;AAAC4B,GAAA,GApCGzB,OAAO;AAsCbA,OAAO,CAAC0B,YAAY,GAAG;EACrBjB,SAAS,EAAEb,SAAS;EACpBe,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,EAAE;EACRJ,WAAW,EAAE;AACf,CAAC;AAEDR,OAAO,CAAC2B,SAAS,GAAG;EAClBf,IAAI,EAAEjB,SAAS,CAACiC,SAAS,CAAC,CAACjC,SAAS,CAACkC,MAAM,EAAElC,SAAS,CAACmC,MAAM,CAAC,CAAC;EAC/DvB,KAAK,EAAEZ,SAAS,CAACkC,MAAM;EACvBpB,SAAS,EAAEd,SAAS,CAACoC,WAAW;EAChCpB,SAAS,EAAEhB,SAAS,CAACqC,IAAI;EACzBxB,WAAW,EAAEb,SAAS,CAACqC;AACzB,CAAC;AAED,eAAehC,OAAO;AAAC,IAAAG,EAAA,EAAAsB,GAAA;AAAAQ,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAR,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}